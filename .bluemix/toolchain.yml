version: '2'

template:
  name: "DYML: $switch/$case construct"
  description: "DYML: $switch/$case construct"
  required:
    - build
    - frontend-repo
    - sample-repo

  # [ type: complex/inline ] -> evaluated in the $env js engine
  #
  info:
    git url: >-
      $env.repository ? '[' + $env.repository + '](' + $env.repository + ')' : "[https://github.com/tonymcguckin/dynamicyml](https://github.com/tonymcguckin/dynamicyml)"
    git branch: >-
      $env.repository && $env.branch ? '[' + $env.branch + ']('+ $env.repository + '/tree/' + $env.branch + ')': "[flavour9](https://github.com/tonymcguckin/dynamicyml/tree/flavour9)"

toolchain:
  name: 'DYML: $switch/$case construct'

services:

  # dynamic yml 'service' entry...
  frontend-repo:
    
    $switch:
      
      # $expr can be a unary/binary/ternary/complex, static string, or {{mustache}}
      #
      - $expr: $env.expr

      #- $expr: hostedgit
      #- $expr: 'hostedgit'
      #- $expr: "hostedgit"
      
      #- $expr: {{expr}}
      #- $expr: '{{expr}}'
      #- $expr: "{{expr}}"
 
      - $default: 'hostedgit'
        service_id: 'hostedgit'
        parameters:

          # [ type: unary ] -> translates to {{test}}
          # will raise a warning if 'test' cannot be resolved
          #
          test1: $env.test
 
          # [ type: binary ] -> LHS translates to {{test}} if resolved
          # and will raise a warning if 'test' cannot be resolved
          # RHS will be used if LHS didn't resolve
          #
          test2: $env.test || test2
          test3: "$env.test || {{test3}}"
 
          # [ type: ternary js ] -> evaluated in $env expression engine
          #
          test4: "$env.test !== undefined ? 'test6_true' : $env.branch"
          
          # [ type: complex js ] -> evaluated in $env expression engine
          #
          test5: "$env.test || 'test' + '5'"
          test6: "$env.test || $env.expr || $env.tenant"
          test7: "$env.env_id + ' test7 ' + Date.now()"
          
          # [ type: complex js ] -> invalid as mustache {{test3}}
          # won't resolve on the server-side
          #
          #test8: "{{test3}} || $env.app_repo"
          
          # [ type: regular js ] ignored by the $env expression engine
          #
          test9: "eval('process.exit(0)');"
          test10: "javascript:Date.now()"
          

form:
  pipeline:
    parameters: {}
    schema: {}
