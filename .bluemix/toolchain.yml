version: '2'

template:

  name: "DYML: $switch/$case construct"

  description: "DYML: $switch/$case construct"
  required:
    - build
    - frontend-repo
    - sample-repo
  info:
    git url: >-
      [https://github.com/tonymcguckin/dynamicyml](https://github.com/tonymcguckin/dynamicyml)
    git branch: >-
      [flavour6](https://github.com/tonymcguckin/dynamicyml/tree/flavour6)

toolchain:
  name: 'DYML: $switch/$case construct'

services:

  # dynamic yml 'service' entry...
  sample-repo:

    $switch:

      - $expr: "$env.case == undefined ? 'gritty' : $env.case"
  
      - $case: "gritty"
        service_id: gritty
        parameters: {}
  
      - $default: "hostedgit"
        service_id: hostedgit
        parameters:

          # unary test
          test1: $env.test
          
          # binary tests
          test2: $env.test || 'clone'
          test3: $env.test || '{{a}} and {{b}}'
          test4: $env.test || "{{a}} and {{b}}"
          test5: $env.test || "{{a}} can't be {{b}} so what!"
          test6: $env.test || 'http://blah.com/repo'
          test7: $env.test || "fo'rk'eee"
          test8: $env.test || "Can't do this!"
          
          # javascript complex & ternary tests...
          test9: $env.test || $env.y + ' ' + $env.z
          test10: $env.test || $env.y || $env.z
          test11: "$env.test === 'foo' ? 'bar' : 'http://blah.com/repo'"
          test12: "$env.test == 'foo' ? 99.99 : 199.98"
          test13: "$env.test === $env.test ? 'yes' : 'no'" 
          test14: $env.app_repo === 'link' || 'clone'
          test15: "$env.app_repo !== undefined ? 'link' : 'clone'"
          test16: "$env.app_repo ? 'link' : 'clone'"
          test17: $env.app_repo ? 'link' || 'clone'
          
          # javascript neutralisation tests...
          test18: "$env.dd foo.test13:"
          test19: "$env.dd=y"
          test20: "$env.dd>>>=y"
          test21: "function f() { var x = 99; return $env.dd; }"
          test22: "while(true){ $env.f }"
          test23: "for(var x = 0; x < y; x++){ $env.f + x; }"
          test24: "$env.dd; throw new Error('foo');"
          test25: "$env.dd; alert('hello');"
          test26: "console.log($env.dd);"
          test27: "$env.dd ? this : super"
          test28: "try { $env.dd } catch(e){}"
          test29: "$env.y + (5 + 2)"
          test30: "$env.foo ? document.cookie : document"
          test31: "$env.foo ? process : global"
          test32: "$env.foo ? Headers : Request"
          test33: "if($env.foo !== undefined) return Headers; } else { return this; }"

form:
  pipeline:
    parameters:
      username: 'admin'
      group: 'system'
    schema:
      $ref: deploy.json
