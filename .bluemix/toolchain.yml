version: '2'
template:
  name: "Dynamic YML - $options/$ifdef/$parameters - Testing Toolchain"
  description: "Dynamic YML - $options/$ifdef/$parameters - Testing Toolchain"
  required:
    - build
    - frontend-repo
  info:
    git url: >-
      [https://github.com/tonymcguckin/dynamicyml](https://github.com/tonymcguckin/dynamicyml)
    git branch: >-
      [master](https://github.com/tonymcguckin/dynamicyml/tree/master)
toolchain:
  name: 'Dynamic YML - $options/$ifdef/$parameters - Testing Toolchain'
services:

  # dynamic yml 'service' entry...
  frontend-repo:

    # yml preprocessor checks for the specified
    # $parameter (ie: 'source_provider in this example)
    # on the query string context to determine which $ifdef
    # option to match... if no match found, then it
    # attempts to match using the specified $default... 
    $parameter: 'source_provider'
    $default: 'githubpublic'
    
    $options:
      - $ifdef: 'hostedgit'
        service_id: 'hostedgit'
        parameters:
          
          # yml preprocessor translates to {{app_repo}}...
          app_repo: $parameter.app_repo
          repo_url: $parameter.app_repo
          
          # yml preprocessor translates to {{app_repo}}...
          app_repo1: $parameter.app_repo
          app_repo2: '$parameter.app_repo'
          app_repo3: "$parameter.app_repo"
          
          # ignored by the yml preprocessor...
          app_repo4: {{app_repo}}
          app_repo5: '{{app_repo}}'
          app_repo6: "{{app_repo}}"
          
          # yml preprocessor translates to {{test}}...
          test: $parameter.test
          
          # yml preprocessor translates to {{test}}
          # if 'test' is present on the query context...
          # otherwise returns the RHS alternative...
          test1: $parameter.test || {{timestamp}}
          test2: $parameter.test || '{{timestamp}}'
          test3: $parameter.test || "{{timestamp}}"
          
          test4: $parameter.test||{{timestamp}}
          test5: $parameter.test||'{{timestamp}}'
          test6: $parameter.test||"{{timestamp}}"
          
          test7: '$parameter.test || {{timestamp}}'
          test8: "$parameter.test||{{timestamp}}"
          
          # ignored by the yml preprocessor...
          test9: {{test}}
          test10: '{{test}}'
          test11: "{{test}}"
          
          # yml preprocessor translates to {{test}}
          # if 'test' is present on the query context...
          # otherwise returns the RHS alternative...
          test12: $parameter.test || a7b9ddef66a
          test13: $parameter.test || 'a7b9ddef66a'
          test14: $parameter.test || "a7b9ddef66a"
          
          test15: $parameter.test||c6a8f7ac87c
          test16: $parameter.test||'c6a8f7ac87c'
          test17: $parameter.test||"c6a8f7ac87c"
          
          # yml preprocessor translates to {{test}}
          # if 'test' is present on the query context...
          # otherwise returns the RHS alternative...
          test18: $parameter.test || true
          test19: $parameter.test || false
          
          # yml preprocessor translates to {{test}}
          # if 'test' is present on the query context...
          # otherwise returns the RHS alternative...
          test20: $parameter.test || 0
          test21: $parameter.test || 1
          test22: $parameter.test || 2
          test23: $parameter.test || 10.0
          test24: $parameter.test || 10.1
          test25: $parameter.test || 0.0
          test26: $parameter.test || 0.1
          
          test27: {}
          test28: {window}
          test29: {{window}}
          test30: "javascript:eval('window')"
          test31: javascript:eval('window')
          test32: {javascript:eval('window')}
          test33: console.log("test33")
          test34: javascript:console.log("test34")
          
          enable_traceability: true
          has_issues: true
          repo_name: 'frontend-repo-onhostedgit'
          type: clone
          
      - $ifdef: 'githubpublic'
        service_id: 'githubpublic'
        parameters:
          repo_name: 'frontend-repo-ongithubpublic'
          app_repo: $parameter.app_repo
          repo_url: $parameter.app_repo
          type: $parameter.type || "link"
          has_issues: $parameter.issues || true
          enable_traceability: $parameter.trace || true
  
  build:
    $parameter: 'pipeline'
    $default: 'p1'
    $options:
      - $ifdef: 'p1'
        service_id: pipeline
        parameters:
          services:
            - frontend-repo
          name: 'Pipeline 1'
          ui-pipeline: true
          configuration:
            content:
              $text: pipeline.yml
            env:
              REPO: frontend-repo
              USERNAME: '{{form.pipeline.parameters.username}}'
              PASSWORD: '{{form.pipeline.parameters.password}}'
              API_KEY: '{{form.pipeline.parameters.api-key}}'
              SPACE: '{{form.pipeline.parameters.space}}'
              ORG: '{{form.pipeline.parameters.organization}}'
              REGION: '{{form.pipeline.parameters.region}}'
              GROUP: '{{form.pipeline.parameters.group}}'
            execute: true
      - $ifdef: 'p2'
        service_id: pipeline
        parameters:
          services:
            - frontend-repo
          name: 'Pipeline 2'
          ui-pipeline: true
          configuration:
            content:
              $text: pipeline.yml
            env:
              REPO: frontend-repo
              USERNAME: '{{form.pipeline.parameters.username}}'
              PASSWORD: '{{form.pipeline.parameters.password}}'
              API_KEY: '{{form.pipeline.parameters.api-key}}'
              SPACE: '{{form.pipeline.parameters.space}}'
              ORG: '{{form.pipeline.parameters.organization}}'
              REGION: '{{form.pipeline.parameters.region}}'
              GROUP: '{{form.pipeline.parameters.group}}'
            execute: true
form:
  pipeline:
    parameters:
      username: 'admin'
      group: 'system'
    schema:
      $ref: deploy.json
